Time.h:24:17:virtual int std_msgs::Time::serialize(unsigned char*) const	0	static
Time.h:40:17:virtual int std_msgs::Time::deserialize(unsigned char*)	0	static
Time.h:56:18:virtual const char* std_msgs::Time::getType()	0	static
Time.h:57:18:virtual const char* std_msgs::Time::getMD5()	0	static
TopicInfo.h:124:18:virtual const char* rosserial_msgs::TopicInfo::getType()	0	static
TopicInfo.h:125:18:virtual const char* rosserial_msgs::TopicInfo::getMD5()	0	static
Log.h:61:18:virtual const char* rosserial_msgs::Log::getType()	0	static
Log.h:62:18:virtual const char* rosserial_msgs::Log::getMD5()	0	static
RequestParam.h:200:18:virtual const char* rosserial_msgs::RequestParamResponse::getType()	0	static
RequestParam.h:201:18:virtual const char* rosserial_msgs::RequestParamResponse::getMD5()	0	static
UInt16.h:23:17:virtual int std_msgs::UInt16::serialize(unsigned char*) const	0	static
UInt16.h:32:17:virtual int std_msgs::UInt16::deserialize(unsigned char*)	0	static
UInt16.h:41:18:virtual const char* std_msgs::UInt16::getType()	0	static
UInt16.h:42:18:virtual const char* std_msgs::UInt16::getMD5()	0	static
mainpp.cpp:29:6:void tim_channel1_led_callBack(const std_msgs::UInt16&)	0	static
mainpp.cpp:34:6:void tim_channel2_led_callBack(const std_msgs::UInt16&)	0	static
mainpp.cpp:39:6:void tim_channel3_led_callBack(const std_msgs::UInt16&)	0	static
subscriber.h:114:16:void ros::Subscriber<MsgT, void>::callback(unsigned char*) [with MsgT = std_msgs::UInt16]	16	static
subscriber.h:128:15:int ros::Subscriber<MsgT, void>::getEndpointType() [with MsgT = std_msgs::UInt16]	0	static
subscriber.h:120:24:const char* ros::Subscriber<MsgT, void>::getMsgType() [with MsgT = std_msgs::UInt16]	0	static
subscriber.h:124:24:const char* ros::Subscriber<MsgT, void>::getMsgMD5() [with MsgT = std_msgs::UInt16]	0	static
node_handle.h:363:16:bool ros::NodeHandle_<Hardware, MAX_SUBSCRIBERS, MAX_PUBLISHERS, INPUT_SIZE, OUTPUT_SIZE>::connected() [with Hardware = STM32Hardware; int MAX_SUBSCRIBERS = 25; int MAX_PUBLISHERS = 25; int INPUT_SIZE = 512; int OUTPUT_SIZE = 512]	0	static
STM32Hardware.h:93:10:void STM32Hardware::flush()	16	static
node_handle.h:511:15:int ros::NodeHandle_<Hardware, MAX_SUBSCRIBERS, MAX_PUBLISHERS, INPUT_SIZE, OUTPUT_SIZE>::publish(int, const ros::Msg*) [with Hardware = STM32Hardware; int MAX_SUBSCRIBERS = 25; int MAX_PUBLISHERS = 25; int INPUT_SIZE = 512; int OUTPUT_SIZE = 512]	40	static
mainpp.cpp:18:6:void HAL_UART_TxCpltCallback(UART_HandleTypeDef*)	8	static
mainpp.cpp:23:6:void HAL_UART_RxCpltCallback(UART_HandleTypeDef*)	0	static
msg.h:129:15:static void ros::Msg::varToArr(A, V) [with A = unsigned char*; V = long unsigned int]	0	static
RequestParam.h:78:17:virtual int rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const	24	static
Log.h:31:17:virtual int rosserial_msgs::Log::serialize(unsigned char*) const	24	static
TopicInfo.h:43:17:virtual int rosserial_msgs::TopicInfo::serialize(unsigned char*) const	24	static
msg.h:137:15:static void ros::Msg::arrToVar(V&, A) [with V = long unsigned int; A = unsigned char*]	8	static
Log.h:44:17:virtual int rosserial_msgs::Log::deserialize(unsigned char*)	24	static
TopicInfo.h:77:17:virtual int rosserial_msgs::TopicInfo::deserialize(unsigned char*)	40	static
RequestParam.h:130:17:virtual int rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)	32	static
node_handle.h:432:8:bool ros::NodeHandle_<Hardware, MAX_SUBSCRIBERS, MAX_PUBLISHERS, INPUT_SIZE, OUTPUT_SIZE>::subscribe(SubscriberT&) [with SubscriberT = ros::Subscriber<std_msgs::UInt16>; Hardware = STM32Hardware; int MAX_SUBSCRIBERS = 25; int MAX_PUBLISHERS = 25; int INPUT_SIZE = 512; int OUTPUT_SIZE = 512]	8	static
mainpp.cpp:44:6:void setup()	8	static
node_handle.h:372:8:void ros::NodeHandle_<Hardware, MAX_SUBSCRIBERS, MAX_PUBLISHERS, INPUT_SIZE, OUTPUT_SIZE>::requestSyncTime() [with Hardware = STM32Hardware; int MAX_SUBSCRIBERS = 25; int MAX_PUBLISHERS = 25; int INPUT_SIZE = 512; int OUTPUT_SIZE = 512]	24	static
node_handle.h:480:8:void ros::NodeHandle_<Hardware, MAX_SUBSCRIBERS, MAX_PUBLISHERS, INPUT_SIZE, OUTPUT_SIZE>::negotiateTopics() [with Hardware = STM32Hardware; int MAX_SUBSCRIBERS = 25; int MAX_PUBLISHERS = 25; int INPUT_SIZE = 512; int OUTPUT_SIZE = 512]	48	static
node_handle.h:379:8:void ros::NodeHandle_<Hardware, MAX_SUBSCRIBERS, MAX_PUBLISHERS, INPUT_SIZE, OUTPUT_SIZE>::syncTime(uint8_t*) [with Hardware = STM32Hardware; int MAX_SUBSCRIBERS = 25; int MAX_PUBLISHERS = 25; int INPUT_SIZE = 512; int OUTPUT_SIZE = 512]	32	static
node_handle.h:212:15:int ros::NodeHandle_<Hardware, MAX_SUBSCRIBERS, MAX_PUBLISHERS, INPUT_SIZE, OUTPUT_SIZE>::spinOnce() [with Hardware = STM32Hardware; int MAX_SUBSCRIBERS = 25; int MAX_PUBLISHERS = 25; int INPUT_SIZE = 512; int OUTPUT_SIZE = 512]	32	static
mainpp.cpp:60:6:void loop()	8	static
mainpp.cpp:67:1:cpp)	12	static
